variables:
  DOCKER_DRIVER: overlay
  PYTHON_IMAGE: python:3.9.2-alpine3.12

stages:
  - lint
  - test
  - deploy


lint:
  image: $PYTHON_IMAGE
  stage: lint
  script: ./scripts/check.sh

test:
  image: $PYTHON_IMAGE
  stage: test
  before_script:
    - pip install -r requirements.txt
  script:
    - pytest --junit-xml=test-report.xml
  artifacts:
    paths:
      - test-report.xml
    reports:
      junit: test-report.xml

docker-build:
  image: docker:latest
  services:
    - docker:dind
  stage: deploy
  script:
  - docker build -f Dockerfile --iidfile imageid.txt -t registry.heroku.com/steria/web .
  - docker login -u _ -p $HEROKU_TOKEN registry.heroku.com
  - docker push registry.heroku.com/steria/web
  - apk add --no-cache curl
  - echo "Docker Image ID is $(cat imageid.txt)"
  - |-
    curl -X PATCH https://api.heroku.com/apps/steria/formation --header "Content-Type: application/json" --header "Accept: application/vnd.heroku+json; version=3.docker-releases" --header "Authorization: Bearer ${HEROKU_TOKEN}" --data '{ "updates": [ { "type": "web", "docker_image": "'$(cat imageid.txt)'" } ] }'
  environment:
      name: production
      url: https://steria.herokuapp.com/
  only:
  - master
  